/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export function oscillator_create(a: number, b: number): number;
export function oscillator_node(a: number, b: number): void;
export function oscillator_get_param(a: number, b: number): number;
export function oscillator_command(a: number, b: number): void;
export function oscillator_subscribe(a: number, b: number): void;
export function oscillator_destroy(a: number): void;
export function __wbg_oscillator_free(a: number): void;
export function _oscillatorprocessor_new(a: number, b: number): number;
export function _oscillatorprocessor_connect(a: number): void;
export function _oscillatorprocessor_process(a: number, b: number, c: number, d: number): number;
export function _oscillatorprocessor_parameter_descriptor(a: number): void;
export function __wbg__oscillatorprocessor_free(a: number): void;
export function gain_create(a: number, b: number): number;
export function gain_node(a: number, b: number): void;
export function gain_get_param(a: number, b: number): number;
export function gain_command(a: number, b: number): void;
export function gain_subscribe(a: number, b: number): void;
export function gain_destroy(a: number): void;
export function __wbg_gain_free(a: number): void;
export function _gainprocessor_new(a: number, b: number): number;
export function _gainprocessor_connect(a: number): void;
export function _gainprocessor_process(a: number, b: number, c: number, d: number): number;
export function _gainprocessor_parameter_descriptor(a: number): void;
export function __wbg__gainprocessor_free(a: number): void;
export function main(): void;
export function init_worklet(a: number, b: number, c: number): number;
export function __wbindgen_malloc(a: number, b: number): number;
export function __wbindgen_realloc(a: number, b: number, c: number, d: number): number;
export const __wbindgen_export_2: WebAssembly.Table;
export function wasm_bindgen__convert__closures__invoke1_mut__heb4bdd43f06d75f8(a: number, b: number, c: number): void;
export function wasm_bindgen__convert__closures__invoke1__h39ad45dc5a5e543b(a: number, b: number, c: number): void;
export function _dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__hdb12a4006e83738b(a: number, b: number, c: number): void;
export function wasm_bindgen__convert__closures__invoke1_mut__h7e4451a10270cd02(a: number, b: number, c: number): void;
export function __wbindgen_add_to_stack_pointer(a: number): number;
export function __wbindgen_free(a: number, b: number, c: number): void;
export function __wbindgen_exn_store(a: number): void;
export function wasm_bindgen__convert__closures__invoke2_mut__hbdb2690ca0f4482d(a: number, b: number, c: number, d: number): void;
export function __wbindgen_start(): void;
